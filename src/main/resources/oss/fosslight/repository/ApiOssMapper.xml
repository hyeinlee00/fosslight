<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="oss.fosslight.repository.ApiOssMapper">
	<select id="getOssInfo" parameterType="hashMap" resultType="oss.fosslight.domain.CamelMap">
		SELECT OM.OSS_NAME
			 , OM.OSS_VERSION
			 , OM.LICENSE_DIV
			 , TRIM(REPLACE(REPLACE(GROUP_CONCAT( CONCAT(OL.OSS_LICENSE_COMB, ' ', IF(LM.SHORT_IDENTIFIER = '' OR LM.SHORT_IDENTIFIER IS NULL, LM.LICENSE_NAME, LM.SHORT_IDENTIFIER)) ORDER BY OL.OSS_LICENSE_IDX SEPARATOR ' '), ' AND ', ','), ' OR ', '|')) AS DECLARED_LICENSE
			 , (SELECT IFNULL(GROUP_CONCAT(IF(LM.SHORT_IDENTIFIER = '' OR LM.SHORT_IDENTIFIER IS NULL
			 						          , LM.LICENSE_NAME
									          , LM.SHORT_IDENTIFIER) 
									       ORDER BY OSS_LICENSE_IDX ASC)
							  , '')
        		  FROM OSS_LICENSE_DETECTED ODT
                 INNER JOIN LICENSE_MASTER LM ON ODT.LICENSE_ID = LM.LICENSE_ID
		         WHERE ODT.OSS_ID = OM.OSS_ID) AS DETECTED_LICENSE
			 , OM.COPYRIGHT
		  	 , IF(OM.OBLIGATION_TYPE = '10' OR OM.OBLIGATION_TYPE = '11', 'Y', 'N') AS NOTICE
			 , IF(OM.OBLIGATION_TYPE = '11', 'Y', 'N') AS SOURCE
			 , OM.DEACTIVATE_FLAG AS DEACTIVATE
		  FROM OSS_MASTER OM
		 INNER JOIN OSS_LICENSE_DECLARED OL ON OM.OSS_ID = OL.OSS_ID
		 INNER JOIN LICENSE_MASTER LM ON LM.LICENSE_ID = OL.LICENSE_ID
		 WHERE OM.OSS_NAME = #{ossName}
		 <if test="!@oss.fosslight.util.StringUtil@isEmpty(ossVersion)">
		   AND OM.OSS_VERSION = #{ossVersion}
		 </if>
		 GROUP BY OM.OSS_ID
	</select>
	
	<select id="getOssName" parameterType="String" resultType="String">
		SELECT OSS_NAME FROM OSS_NICKNAME WHERE OSS_NICKNAME = #{ossName}
	</select>
	
	<select id="getOssInfoByDownloadLocation" parameterType="String" resultType="oss.fosslight.domain.CamelMap">
		SELECT OM.OSS_NAME
			 , OM.OSS_VERSION
			 , OM.LICENSE_DIV
			 , TRIM(REPLACE(REPLACE(GROUP_CONCAT( CONCAT(OL.OSS_LICENSE_COMB, ' ', IF(LM.SHORT_IDENTIFIER = '' OR LM.SHORT_IDENTIFIER IS NULL, LM.LICENSE_NAME, LM.SHORT_IDENTIFIER)) ORDER BY OL.OSS_LICENSE_IDX SEPARATOR ' '), ' AND ', ','), ' OR ', '|')) AS DECLARED_LICENSE
		  	 , (SELECT IFNULL(GROUP_CONCAT(IF(LM.SHORT_IDENTIFIER = '' OR LM.SHORT_IDENTIFIER IS NULL
			 						          , LM.LICENSE_NAME
									          , LM.SHORT_IDENTIFIER) 
									       ORDER BY OSS_LICENSE_IDX ASC)
					   , '')
        		  FROM OSS_LICENSE_DETECTED ODT
                 INNER JOIN LICENSE_MASTER LM ON ODT.LICENSE_ID = LM.LICENSE_ID
		         WHERE ODT.OSS_ID = OM.OSS_ID) AS DETECTED_LICENSE
		  FROM OSS_MASTER OM
		 INNER JOIN OSS_LICENSE_DECLARED OL ON OM.OSS_ID = OL.OSS_ID
		 INNER JOIN LICENSE_MASTER LM ON LM.LICENSE_ID = OL.LICENSE_ID
		 WHERE OM.DOWNLOAD_LOCATION = #{downloadLocation}
		 GROUP BY OM.OSS_ID
	</select>
	
	<select id="getLicenseInfo" parameterType="String" resultType="oss.fosslight.domain.CamelMap">
		SELECT A.* 
		  FROM (SELECT LM.LICENSE_NAME
				     , IFNULL(LM.SHORT_IDENTIFIER, '') AS IDENTIFIER
					 , IFNULL(GROUP_CONCAT(NICK.LICENSE_NICKNAME), '') AS NICKNAME
					 , IFNULL(LM.OBLIGATION_NOTIFICATION_YN, 'N') AS NOTICE
					 , IFNULL(LM.OBLIGATION_DISCLOSING_SRC_YN, 'N') AS SOURCE
					 , LM.LICENSE_TEXT
					 , LM.DESCRIPTION AS USER_GUIDE
					 , (SELECT IFNULL(GROUP_CONCAT(CD_DTL_NM), '') FROM T2_CODE_DTL WHERE CD_NO = '226' AND LM.RESTRICTION LIKE CONCAT('%', CD_DTL_NO, '%')) AS RESTRICTION
					 , IFNULL(LM.ATTRIBUTION, '') AS ATTRIBUTION
					 , (SELECT IFNULL(CD_DTL_NM, '') FROM T2_CODE_DTL WHERE CD_NO = '201' AND CD_DTL_NO = LM.LICENSE_TYPE) AS LICENSE_TYPE
				  FROM LICENSE_MASTER LM
				  LEFT JOIN LICENSE_NICKNAME NICK ON LM.LICENSE_NAME = NICK.LICENSE_NAME
				 WHERE (LM.LICENSE_NAME = #{licenseName}
						OR LM.SHORT_IDENTIFIER = #{licenseName}
			 			OR NICK.LICENSE_NICKNAME = #{licenseName})) A
		 WHERE A.LICENSE_NAME IS NOT NULL
	</select>
	
		
	<select id="selectOssNicknameList" parameterType="String" resultType="String">
		SELECT OSS_NICKNAME
		FROM
			OSS_NICKNAME
		WHERE
			OSS_NAME = #{ossName}
		ORDER BY OSS_NICKNAME
	</select>
	
	<select id="getOssInfoAll" resultType="hashMap">
		<!-- 
		SELECT 
			T1.OSS_ID
			, T1.OSS_NAME
			, T1.OSS_NAME AS OSS_NAME_TEMP
			, T1.OSS_VERSION
			, T1.LICENSE_DIV,T1.DOWNLOAD_LOCATION
			,(SELECT GROUP_CONCAT(D.DOWNLOAD_LOCATION SEPARATOR ',') FROM OSS_DOWNLOADLOCATION D WHERE D.OSS_ID = T1.OSS_ID ) AS DOWNLOAD_LOCATION_GROUP
			,T1.HOMEPAGE
			,T1.SUMMARY_DESCRIPTION
			,T1.ATTRIBUTION
			,T1.COPYRIGHT
			,T1.CVSS_SCORE,T1.CVE_ID,T1.VULN_YN,T1.VULN_RECHECK,T1.VULN_DATE,T1.LICENSE_TYPE,T1.OBLIGATION_TYPE
			,T2.LICENSE_ID,T2.OSS_LICENSE_IDX,T2.OSS_LICENSE_COMB,T2.OSS_COPYRIGHT, IF(IFNULL(T3.SHORT_IDENTIFIER,'') = '',T3.LICENSE_NAME,T3.SHORT_IDENTIFIER) AS LICENSE_NAME, T3.LICENSE_TYPE AS OSS_LICENSE_TYPE
			,(SELECT CONCAT(IF(MULTI_LICENSE_FLAG = 'N', '0', '1'), IF(DUAL_LICENSE_FLAG = 'N', '0', '1'), IF(VERSION_DIFF_FLAG = 'N', '0', '1') ) FROM OSS_MASTER_LICENSE_FLAG WHERE OSS_ID = T1.OSS_ID ) AS OSS_TYPE
			, SUB2.MULTI_LICENSE_FLAG
			, SUB2.DUAL_LICENSE_FLAG
			, SUB2.VERSION_DIFF_FLAG
			, (SELECT GROUP_CONCAT(IF(LM.SHORT_IDENTIFIER = '' OR LM.SHORT_IDENTIFIER IS NULL , LM.LICENSE_NAME , LM.SHORT_IDENTIFIER) ORDER BY OSS_LICENSE_IDX ASC SEPARATOR ', ') 
				 FROM OSS_LICENSE_DETECTED ODT 
				INNER JOIN LICENSE_MASTER LM ON ODT.LICENSE_ID = LM.LICENSE_ID 
				WHERE ODT.OSS_ID = T1.OSS_ID) AS DETECTED_LICENSE
		    , T1.DEACTIVATE_FLAG 
		FROM OSS_MASTER T1 
			INNER JOIN OSS_LICENSE_DECLARED T2 ON T1.OSS_ID = T2.OSS_ID
			INNER JOIN LICENSE_MASTER T3 ON T2.LICENSE_ID = T3.LICENSE_ID
			LEFT OUTER JOIN OSS_MASTER_LICENSE_FLAG SUB2 ON T1.OSS_ID = SUB2.OSS_ID
		WHERE T1.USE_YN = 'Y'
		-->
		SELECT 
			T1.OSS_ID as ossId
			, T1.OSS_NAME as ossName
			, T1.OSS_NAME AS ossNameTemp
			, T1.OSS_VERSION as ossVersion
			, T1.LICENSE_DIV as licenseDiv
			, T1.DOWNLOAD_LOCATION as downloadLocation
			,(SELECT GROUP_CONCAT(D.DOWNLOAD_LOCATION SEPARATOR ',') FROM OSS_DOWNLOADLOCATION D WHERE D.OSS_ID = T1.OSS_ID ) AS downloadLocationGroup
			,T1.HOMEPAGE as homepage
			,T1.SUMMARY_DESCRIPTION as summaryDescription
			,T1.ATTRIBUTION as attribution
			,T1.COPYRIGHT as copyright
			,T1.CVSS_SCORE as cvssScore
			,T1.CVE_ID as cveId
			,T1.VULN_YN as vulnYn
			,T1.VULN_RECHECK as vulnRecheck
			,T1.VULN_DATE as vulnDate
			,T1.LICENSE_TYPE as licenseType
			,T1.OBLIGATION_TYPE as obligationType
			,T2.LICENSE_ID as licenseId
			,T2.OSS_LICENSE_IDX as ossLicenseIdx
			,T2.OSS_LICENSE_COMB as ossLicenseComb
			,T2.OSS_COPYRIGHT as ossCopyright
			, IF(IFNULL(T3.SHORT_IDENTIFIER,'') = '',T3.LICENSE_NAME,T3.SHORT_IDENTIFIER) AS licenseName
			, T3.LICENSE_TYPE AS ossLicenseType
			,(SELECT CONCAT(IF(MULTI_LICENSE_FLAG = 'N', '0', '1'), IF(DUAL_LICENSE_FLAG = 'N', '0', '1'), IF(VERSION_DIFF_FLAG = 'N', '0', '1') ) FROM OSS_MASTER_LICENSE_FLAG WHERE OSS_ID = T1.OSS_ID ) AS ossType
			, SUB2.MULTI_LICENSE_FLAG as multiLicenseFlag
			, SUB2.DUAL_LICENSE_FLAG as dualLicenseFlag
			, SUB2.VERSION_DIFF_FLAG as versionDiffFlag
			, (SELECT GROUP_CONCAT(IF(LM.SHORT_IDENTIFIER = '' OR LM.SHORT_IDENTIFIER IS NULL , LM.LICENSE_NAME , LM.SHORT_IDENTIFIER) ORDER BY OSS_LICENSE_IDX ASC SEPARATOR ', ') 
				 FROM OSS_LICENSE_DETECTED ODT 
				INNER JOIN LICENSE_MASTER LM ON ODT.LICENSE_ID = LM.LICENSE_ID 
				WHERE ODT.OSS_ID = T1.OSS_ID) AS detectedLicense
		    , T1.DEACTIVATE_FLAG as deativateFlag
		FROM OSS_MASTER T1 
			INNER JOIN OSS_LICENSE_DECLARED T2 ON T1.OSS_ID = T2.OSS_ID
			INNER JOIN LICENSE_MASTER T3 ON T2.LICENSE_ID = T3.LICENSE_ID
			LEFT OUTER JOIN OSS_MASTER_LICENSE_FLAG SUB2 ON T1.OSS_ID = SUB2.OSS_ID
		WHERE T1.USE_YN = 'Y'
	</select>
	
	<select id="getOssInfoAllWithNick" resultType="hashMap">
		<!-- 
		SELECT T1.OSS_ID
			 , T4.OSS_NICKNAME AS OSS_NAME
			 , T1.OSS_NAME AS OSS_NAME_TEMP
			 , T1.OSS_VERSION
			 , T1.DEACTIVATE_FLAG
		  FROM OSS_MASTER T1
		 INNER JOIN OSS_NICKNAME T4 ON T1.OSS_NAME = T4.OSS_NAME
		 WHERE T1.USE_YN = 'Y'
		 -->
		 SELECT T1.OSS_ID as ossId
			 , T4.OSS_NICKNAME AS ossName
			 , T1.OSS_NAME AS ossNameTemp
			 , T1.OSS_VERSION as ossVersion
			 , T1.DEACTIVATE_FLAG as deativateFlag
		  FROM OSS_MASTER T1
		 INNER JOIN OSS_NICKNAME T4 ON T1.OSS_NAME = T4.OSS_NAME
		 WHERE T1.USE_YN = 'Y'
	</select>
	
	<select id="getOssAllNickNameList" resultType="hashMap">
		<!-- 
		SELECT OSS_NAME
			 , GROUP_CONCAT(OSS_NICKNAME) AS OSS_NICKNAME 
		  FROM OSS_NICKNAME 
	  GROUP BY OSS_NAME
	  -->
	    SELECT OSS_NAME as ossName
			 , GROUP_CONCAT(OSS_NICKNAME) AS ossNickname 
		  FROM OSS_NICKNAME 
	  GROUP BY OSS_NAME
	</select>

	<select id = "getDownloadLocationListByOssName" parameterType="String" resultType="String">
		SELECT DOWNLOAD_LOCATION
		FROM OSS_DOWNLOADLOCATION
		WHERE OSS_ID IN (SELECT OSS_ID FROM OSS_MASTER where OSS_NAME = #{ossName} AND USE_YN = 'Y' AND DEACTIVATE_FLAG = 'N')
		UNION
		SELECT DOWNLOAD_LOCATION from OSS_MASTER where oss_name = #{ossName} AND USE_YN = 'Y' AND DEACTIVATE_FLAG = 'N'

	</select>

	<select id = "getHomepageListByOssName" parameterType="String" resultType="String">
		SELECT DISTINCT HOMEPAGE
		FROM OSS_MASTER
		WHERE OSS_NAME = #{ossName} AND USE_YN = 'Y' AND DEACTIVATE_FLAG = 'N'

	</select>
</mapper>
